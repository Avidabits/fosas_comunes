<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
  <link rel="stylesheet" type="text/css" href="fosas_comunes.css">
  <title id="title">Cunetas: gente en fosas comunes</title> 
  <script src="https://maps.googleapis.com/maps/api/js"> </script>
  <script src="fosas_comunes.js"> </script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /><!--para que no escalen los móviles-->
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-27140304-5', 'auto');
    ga('send', 'pageview');

  </script>    
    
  <script> <!--script de inicializacion de mapas-->
    // el punto central que sea Madrid (40.4166333,-3.7033831)
    var pCentro=new google.maps.LatLng(40.4166333,-3.7033831);
    var map=null;
    var miZona=null; 
    
    function asyncLoadXMLDoc()
    {  
      console.log("entrando en asyncLoadXMLDoc");
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if (xhttp.readyState == 4 && xhttp.status == 200) {
          miZona=construyeZona(xhttp);
          pCentro=new google.maps.LatLng(miZona.latitud,miZona.longitud);
          map.setCenter(pCentro); 
          // TODO: creaMarcadoresFosas(); //Crear los marcadores de fosas
        }//if 
      };// function onreadystatechange
     
      xhttp.open("GET", nombreFicheroZona(pCentro.lat(), pCentro.lng()), true);
      xhttp.send();
    }// function asyncLoadXMLDoc    
    
    function initialize()
    {
      
      var mapProp = {
      center:pCentro,
      zoom:15,
      scaleControl:true,
      streetViewControl:false,
      mapTypeId:google.maps.MapTypeId.HYBRID
      };

      map=new google.maps.Map(document.getElementById("googleMap"),mapProp);
      
      // asignamos la funcionar a usar cuando el usuario hace click en el mapa
      google.maps.event.addListener(map, 'click', function(event) {
         cambiaPosicion(event.latLng.lat(), event.latLng.lng())
        }); // esto es para que pueda funcionar en modo simulador
       
      asyncLoadXMLDoc();   //funcion asincrona 
      
    }//function initialize

    google.maps.event.addDomListener(window, 'load', initialize);
    

    function creaMarcadoresFosas()
    {     
      // TODO: NO USAR CIRCULOS SINO MARCADORES
      var miFosa = new google.maps.Circle({
      map:map, 
      center:pCentro,
      radius:5,
      strokeOpacity:0,
      strokeWeight:0,
      fillColor:"#880000",
      fillOpacity:0.4}); //new google.maps.Circle
      miZona.bolaPosicionActual=miFosa;
      // TODO: Para cada localidad, obtener la lista de fosas, para cada fosa, marcador
      // el símbolo del marcador, debería depender del tipo de fosa
      for (var i = 0; i <miZona.listaLocalidades.length; i++) {
        var listaFosas=miZona.listaLocalidades[i];
        for (var j=0; j<listaFosas.length; j++)
        {   
           // TODO: LAS FOSAS NO DEBEN SER CIRCULOS SINO MARCADORES                                        
            miFosa = new google.maps.Circle({
              center:new google.maps.LatLng(miZona.listaFosas[i].latitud,miZona.listaFosas[i].longitud),
              radius:miPaseo.listaFosas[i].radio,
              strokeOpacity:0,
              strokeWeight:0,
              fillColor:"#0000FF",
              fillOpacity:0.4
            }); //new google.maps.Circle
        
            google.maps.event.addListener(miFosa, 'click', function(event) {
               cambiaFosa(event.latLng.lat(), event.latLng.lng());
            } ); //addListener
        
            miBola.setMap(map);
            miPaseo.listaFosas[i].marcador=miFosa;
        } // for para cada fosa

      }//for para cada localidad
      
    }// function creaMarcadoresFosas
    
    // en esta zona meteremos las funciones de geolocalizacion
     

  </script>
  </head>

  <body>
<table id="tabla">
  <tr><td><img class="logo" src="logo_fosas_comunes.jpg"></td></tr>
</table> 
    
    <p id="lineaDepuracion">Información adicional</p>
    <p id="googleMap"></p>

  
  <script> <!-- aqui meteremos el codigo de posicionamiento-->

    if(navigator.geolocation)
    {
    // Se cuenta con el soporte para geolocalización, entonces ...
    setInterval(miraDondeEstamos, 30000); // que cada 30 segundos mire donde estamos
    }
    else
    {
    // No se cuenta con soporte para geolocalización, manejar la situación.
    alert("No hay soporte para geolocalización, actualiza tu navegador");
    }
    if (!('speechSynthesis' in window)) alert("Tu navegador no soporta síntesis de voz");
    else habla("este paseo no te va a gustar...");


    function miraDondeEstamos(){
      // hace una peticion de leer la nueva posicion
      navigator.geolocation.getCurrentPosition(onSuccessGeolocating, onErrorGeolocating,  {enableHighAccuracy:true, maximumAge:4000, timeout:4000});
    }

    function onErrorGeolocating(error)
    {
      switch(error.code)
      {
      case error.PERMISSION_DENIED:
      console.error('ERROR: User denied access to track physical position!');
      break;

      case error.POSITION_UNAVAILABLE:
      console.error("ERROR: There is a problem getting the position of the device!");
      break;

      case error.TIMEOUT:
      console.warn("ERROR: The application timed out trying to get the position of the device!");
      break;

      default:
      console.error("ERROR: Unknown problem!");
      break;
      }
    }

    function onSuccessGeolocating(position)
    {
      var msg;
      msg="("+position.coords.latitude+","+position.coords.longitude+") - altura:"+position.coords.altitude;
      document.getElementById("lineaDepuracion").innerHTML =msg;
      cambiaPosicion(position.coords.latitude, position.coords.longitude);
    }  

  </script>
  </body>
</html>
