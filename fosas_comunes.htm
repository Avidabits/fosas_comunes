<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
    
<head>
  <link rel="icon" type="image/png" href="calavera_marker.png">
  <link rel="stylesheet" type="text/css" href="fosas_comunes.css">
  <title id="title">Cunetas: gente en fosas comunes</title> 
  <script src="https://maps.googleapis.com/maps/api/js?AIzaSyDIAeS71vGbVd9V0N9PJwSMrZIxnGQEWoQ"> </script>
    <!--todo: antes de pasar a produccion indicar la url-->
  <script src="fosas_comunes.js"> </script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /><!--para que no escalen los móviles-->
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-27140304-5', 'auto');
    ga('send', 'pageview');
  </script>    
    
  <script> <!--script de inicializacion de mapas-->
    // el punto central que sea Madrid (40.4166333,-3.7033831)
    var pCentro=new google.maps.LatLng(40.4166333,-3.7033831);
    var map=null;
    google.maps.event.addDomListener(window, 'load', initialize);
    
    function initialize()
    {
      var mapProp = {
      center:pCentro,
      zoom:11,
      scaleControl:true,
      streetViewControl:false,
      mapTypeId:google.maps.MapTypeId.HYBRID
      };

      map=new google.maps.Map(document.getElementById("googleMap"),mapProp);

      // asignamos la funcionar a usar cuando el usuario hace click en el mapa
      google.maps.event.addListener(map, 'click', function(event) {
          cambiaPosicion(event.latLng.lat(), event.latLng.lng());         
      }); // esto es para que pueda funcionar en modo simulador
      
      asynCargaMarcadoresFosas(); //funcion asincrona

    }//function initialize   
    
    function asynCargaMarcadoresFosas()
    {
      console.log("entrando en asynCargaMarcadoresFosas");
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
              if (xhttp.readyState == 4 && xhttp.status == 200) {
                  construyeMarcadores(xhttp);
                }//if
          };// function onreadystatechange

      xhttp.open("GET", nombreFicheroMarcadores(), true);
      xhttp.send();
     } // function asynCargaMarcadoresFosas
    
    // como los nuevos ficheros de zona se cargan de forma asincrona
    // necesitamos conservar los datos de entrada en la zona para volver a 
    // llamar a cambiaPosicion, con la zona ya cargada. 
    var latitudEntraZona=null;
    var longitudEntraZona=null; 
    function asyncCargaXMLZona(latitud, longitud)
    {  
      latitudEntraZona=latitud;
      longitudEntraZona=longitud;
      console.log("entrando en asyncCargaXMLZona");
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
              if (xhttp.readyState == 4 && xhttp.status == 200) {
                  miZona=construyeZona(xhttp);
                  // hacemos que cambiaPosicion haga el trabajo que no
                  // pudo hacer por no tener cargada la zona
                  cambiaPosicion(latitudEntraZona, longitudEntraZona);
              }//if
          };// function onreadystatechange

      xhttp.open("GET", nombreFicheroZona(latitud, longitud), true);
      xhttp.send();
      
    }// function asyncCargaXMLZona

    function construyeMarcadores(xml)
    {
      var xmlDoc = xml.responseXML;
      var cLatitud;
      var cLongitud; 
      console.log("xmlDoc:" + xmlDoc);
      var xmlLocalidad = xmlDoc.getElementsByTagName("localidad");//lista de localidadades
      console.log("construyeMarcadores: longitud="+xmlLocalidad.length);
      for (var i = 0; i <xmlLocalidad.length; i++) {  
        cLatitud=xmlLocalidad[i].getElementsByTagName("latitud")[0].childNodes[0].nodeValue;
        cLatitud=cLatitud/1; // con esto fuerzo la conversion numerica
        cLongitud=xmlLocalidad[i].getElementsByTagName("longitud")[0].childNodes[0].nodeValue;
        cLongitud=cLongitud/1; // con esto fuerzo la conversion numerica
        var punto=new google.maps.LatLng(cLatitud,cLongitud);
        var markerFosa=new google.maps.Marker({position:punto, map:map, icon:'calavera_marker.png'});
        google.maps.event.addListener(markerFosa, 'click', function(event) {
                  /*esto es para poder funcionar en modo simulacion */
                  console.log("se ha pinchado un marcador, evento: ", event);
                  cambiaPosicion(event.latLng.lat(), event.latLng.lng()); 
           } ); //addListener

      }//for  
  
    }//function construyeMarcadores
    
  
    
  </script>
  </head>

  <body>
<table id="tabla">
  <tr><td><img class="logo" src="logo_fosas_comunes.jpg"></td></tr>
</table> 
    
    <p id="lineaDepuracion">Información adicional</p>
    <p id="googleMap"></p>

  
  <script> <!-- aqui meteremos el codigo de posicionamiento-->

    if(navigator.geolocation)
    {
      // Se cuenta con el soporte para geolocalización, entonces ...
      setInterval(miraDondeEstamos, 30000); // que cada 30 segundos mire donde estamos
    }
    else
    {
      // No se cuenta con soporte para geolocalización, manejar la situación.
      alert("No hay soporte para geolocalización, actualiza tu navegador");
    }
    // TODO: SACAR VENTANA INFORMATIVA SOBRE NAVEGADORES SOPORTADOS
    if (!('speechSynthesis' in window)) alert("Tu navegador no soporta síntesis de voz");
    else {
       // TODO: entender porque este mensaje pronuncia bien la ñ y los acentos y los otros no.
      var speech="Llevamos 80 años con la misma canción."; 
      habla(speech);
      //habla("y no hay manera"); //este segundo no funciona, investigar porque poniendo los manejadores de eventos
    }
   

    function miraDondeEstamos(){
      // hace una peticion de leer la nueva posicion
      navigator.geolocation.getCurrentPosition(onSuccessGeolocating, onErrorGeolocating,  {enableHighAccuracy:true, maximumAge:4000, timeout:4000});
    }

    function onErrorGeolocating(error)
    {
      switch(error.code)
      {
      case error.PERMISSION_DENIED:
      console.error('ERROR: User denied access to track physical position!');
      break;

      case error.POSITION_UNAVAILABLE:
      console.error("ERROR: There is a problem getting the position of the device!");
      break;

      case error.TIMEOUT:
      console.warn("ERROR: The application timed out trying to get the position of the device!");
      break;

      default:
      console.error("ERROR: Unknown problem!");
      break;
      }
    }

    function onSuccessGeolocating(position)
    {
      var msg;
      msg="("+position.coords.latitude+","+position.coords.longitude+") - altura:"+position.coords.altitude;
      document.getElementById("lineaDepuracion").innerHTML =msg;
      cambiaPosicion(position.coords.latitude, position.coords.longitude);
      pCentro=new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      map.setCenter(pCentro);    
    }  

  </script>
  </body>
</html>
